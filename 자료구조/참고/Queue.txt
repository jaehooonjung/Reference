#include <iostream>
#define EMPTY 0
using namespace std;

struct Node
{
	int data;
	Node* Next;
};

void enqueue(Node** Front, Node** Rear, int data)
{
	Node* Tmp;
	Tmp = new Node;
	Tmp->data = data;
	Tmp->Next = NULL;
	if(*Front != NULL)
	{
		(*Rear)->Next = Tmp;
		*Rear = (*Rear)->Next;
	}
	else
		*Rear = *Front = Tmp;
	cout << "Enqueue" << endl;
	cout << "Front = " << (*Front)->data << endl;
	cout << "Rear = " << (*Rear)->data << endl;
}
void dequeue(Node** Front)
{
	Node* tmp;
	if(*Front == NULL)
	{
		cout << "정보가 없습니다." << endl;
		return;
	}
	tmp = *Front;
	*Front = (*Front)->Next;
	cout << "Dequeue = " << tmp->data << endl;
	delete tmp;
}

void main()
{
	Node *Front = NULL, *Rear = NULL;
	enqueue(&Front, &Rear, 10);
	cout << endl;
	enqueue(&Front, &Rear, 20);
	cout << endl;
	enqueue(&Front, &Rear, 30);
	cout << endl;
	dequeue(&Front);
	cout << endl;
	dequeue(&Front);
	cout << endl;
	dequeue(&Front);
	cout << endl;
	dequeue(&Front);
	cout << endl;
	enqueue(&Front, &Rear, 10);
	cout << endl;
	enqueue(&Front, &Rear, 20);
	cout << endl;
	enqueue(&Front, &Rear, 30);
	cout << endl;
};
